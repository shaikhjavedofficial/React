[{"D:\\pdac\\React\\crud\\src\\index.js":"1","D:\\pdac\\React\\crud\\src\\App.js":"2","D:\\pdac\\React\\crud\\src\\contexts\\EmployeeContext.js":"3","D:\\pdac\\React\\crud\\src\\components\\EmployeeList.js":"4","D:\\pdac\\React\\crud\\src\\components\\Employee.js":"5","D:\\pdac\\React\\crud\\src\\components\\AddForm.js":"6","D:\\pdac\\React\\crud\\src\\components\\Json\\db.js":"7","D:\\pdac\\React\\crud\\src\\components\\EditForm.js":"8"},{"size":215,"mtime":1636103146286,"results":"9","hashOfConfig":"10"},{"size":288,"mtime":1637606729457,"results":"11","hashOfConfig":"10"},{"size":2704,"mtime":1637607928060,"results":"12","hashOfConfig":"10"},{"size":1689,"mtime":1636111928003,"results":"13","hashOfConfig":"10"},{"size":2806,"mtime":1636046518689,"results":"14","hashOfConfig":"10"},{"size":6223,"mtime":1637604674807,"results":"15","hashOfConfig":"10"},{"size":1015,"mtime":1636031378746,"results":"16","hashOfConfig":"10"},{"size":5117,"mtime":1637607738864,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1w4zg0n",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"D:\\pdac\\React\\crud\\src\\index.js",[],["37","38"],"D:\\pdac\\React\\crud\\src\\App.js",[],"D:\\pdac\\React\\crud\\src\\contexts\\EmployeeContext.js",["39"],"import { createContext, useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { defaultData } from \"../components/Json/db\";\nimport axios from \"axios\";\nexport const EmployeeContext = createContext();\n\nconst EmployeeContextProvider = (props) => {\n  const [getData, setData] = useState([]);\n  axios\n    .get(\n      \"http://192.168.0.236/i2eopenemr/interface/forms/customapi/test/service.php?servicename=getEmployee\"\n    )\n    .then((resp) => {\n      setData(resp);\n      console.log(resp);\n    });\n\n  const [employees, setEmployees] = useState([\n    {\n      id: uuidv4(),\n      fullname: \"\",\n      dob: \"\",\n      age: \"\",\n      gender: \"\",\n      address: \"\",\n      designation: \"\",\n      salary: \"\",\n    },\n  ]);\n  const [DefaultData, setDefaultData] = useState(defaultData.data);\n\n  useEffect(() => {\n    getData.data >= 1\n      ? setEmployees(getData.data)\n      : setEmployees(JSON.parse(localStorage.getItem(\"employees\")));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"employees\", JSON.stringify(employees));\n  });\n\n  const sortedEmployees = employees.sort((a, b) => (a.name < b.name ? -1 : 1));\n\n  const addEmployee = (\n    fullname,\n    dob,\n    age,\n    gender,\n    address,\n    designation,\n    salary\n  ) => {\n    setEmployees([\n      ...employees,\n      {\n        id: uuidv4(),\n        fullname,\n        dob,\n        age,\n        gender,\n        address,\n        designation,\n        salary,\n      },\n    ]);\n  };\n\n  const deleteEmployee = (id) => {\n    setEmployees(employees.filter((employee) => employee.id !== id));\n    setDefaultData(DefaultData.filter((data) => data.id !== id));\n    axios.delete(\n      \"http://192.168.0.236/i2eopenemr/interface/forms/customapi/test/service.php?servicename=deleteEmployee\",\n      {\n        id: id,\n      }\n    );\n  };\n\n  const updateEmployee = (id, updatedEmployee) => {\n    setEmployees(\n      employees.map((employee) =>\n        employee.id === id ? updatedEmployee : employee\n      )\n    );\n    setDefaultData(\n      DefaultData.map((data) => (data.id === id ? updatedEmployee : data))\n    );\n    employees.map((employee) =>\n      employee.id === id\n        ? axios\n            .put(\n              \"http://192.168.0.236/i2eopenemr/interface/forms/customapi/test/service.php?servicename=updateEmployee\",\n              updateEmployee\n            )\n            .then((resp) => console.log(resp))\n        : employee\n    );\n  };\n\n  return (\n    <EmployeeContext.Provider\n      value={{\n        addEmployee,\n        DefaultData,\n        sortedEmployees,\n        deleteEmployee,\n        updateEmployee,\n      }}\n    >\n      {props.children}\n    </EmployeeContext.Provider>\n  );\n};\n\nexport default EmployeeContextProvider;\n","D:\\pdac\\React\\crud\\src\\components\\EmployeeList.js",[],"D:\\pdac\\React\\crud\\src\\components\\Employee.js",[],"D:\\pdac\\React\\crud\\src\\components\\AddForm.js",[],"D:\\pdac\\React\\crud\\src\\components\\Json\\db.js",[],"D:\\pdac\\React\\crud\\src\\components\\EditForm.js",["40"],"import { Form, Button, Row, Col } from \"react-bootstrap\";\n\nimport { EmployeeContext } from \"../contexts/EmployeeContext\";\nimport { useContext, useState, useEffect } from \"react\";\n\nconst EditForm = ({ theEmployee }) => {\n  const id = theEmployee.id;\n\n  const [fullname, setFullName] = useState(theEmployee.fullname);\n  const [dob, setDob] = useState(theEmployee.dob);\n  const [age, setAge] = useState(theEmployee.age);\n  const [gender, setGender] = useState(theEmployee.gender);\n  // const [genderMale, setGenderMale] = useState(false);\n  // const [genderFemale, setGenderFemale] = useState(false);\n  const [address, setAddress] = useState(theEmployee.address);\n  const [designation, setDesignation] = useState(theEmployee.designation);\n  const [salary, setSalary] = useState(theEmployee.salary);\n\n  const { updateEmployee } = useContext(EmployeeContext);\n\n  const updatedEmployee = {\n    id,\n    fullname,\n    dob,\n    age,\n    gender,\n    address,\n    designation,\n    salary,\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateEmployee(id, updatedEmployee);\n  };\n\n  // useEffect(() => {\n  //   console.log(\"Gender==>\", gender);\n  //   gender === \"male\" ? setGenderMale(true) : setGenderMale(false);\n  //   gender === \"female\" ? setGenderFemale(true) : setGenderFemale(false);\n  // }, [gender]);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>\n              Full Name<sup>*</sup>\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"enter full name\"\n              name=\"fullname\"\n              value={fullname}\n              onChange={(e) => setFullName(e.target.value)}\n              required\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>\n              DOB<sup>*</sup>\n            </Form.Label>\n            <Form.Control\n              type=\"date\"\n              name=\"dob\"\n              value={dob}\n              placeholder=\"Date of Birth\"\n              onChange={(e) => setDob(e.target.value)}\n              required\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>\n              Age<sup>*</sup>\n            </Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"enter your age\"\n              name=\"age\"\n              value={age}\n              onChange={(e) => setAge(e.target.value)}\n              required\n            />\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>\n              Gender<sup>*</sup>\n            </Form.Label>\n            <br />\n            <Form.Check\n              // id=\"male\"\n              value={gender}\n              // checked={true}\n              type=\"radio\"\n              label=\"Male\"\n              name=\"gender\"\n              inline={true}\n              onChange={(e) => setGender(e.target.value)}\n              required\n            />\n\n            <Form.Check\n              // id=\"female\"\n              value={gender}\n              // checked={true}\n              type=\"radio\"\n              label=\"Female\"\n              name=\"gender\"\n              inline={true}\n              onChange={(e) => setGender(e.target.value)}\n              required\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n      <Form.Group>\n        <Form.Label>\n          Address<sup>*</sup>\n        </Form.Label>\n        <Form.Control\n          as=\"textarea\"\n          placeholder=\"Address *\"\n          rows={3}\n          name=\"address\"\n          value={address}\n          onChange={(e) => setAddress(e.target.value)}\n        />\n      </Form.Group>\n      <Row>\n        <Col>\n          <Form.Group>\n            <Form.Label>\n              Designation<sup>*</sup>\n            </Form.Label>\n            <select\n              name=\"designation\"\n              value={designation}\n              defaultValue=\"Choose...\"\n              onChange={(e) => setDesignation(e.target.value)}\n              required\n            >\n              <option value=\"\">Select</option>\n              <option value=\"Software Developer\">Software Developer</option>\n              <option value=\"DevOps Architect\">DevOps Architect</option>\n              <option value=\"Cloud Engineer\">Cloud Developer</option>\n            </select>\n          </Form.Group>\n        </Col>\n        <Col>\n          <Form.Group>\n            <Form.Label>\n              Salary<sup>*</sup>\n            </Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Salary\"\n              name=\"salary\"\n              value={salary}\n              onChange={(e) => setSalary(e.target.value)}\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n      <Row>\n        <Col></Col>\n        <Col></Col>\n        <Col></Col>\n        <Col>\n          <Button variant=\"success\" type=\"submit\">\n            Update Employee\n          </Button>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default EditForm;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":36,"column":6,"nodeType":"47","endLine":36,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":4,"column":32,"nodeType":"51","messageId":"52","endLine":4,"endColumn":41},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData.data'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setEmployees' needs the current value of 'getData.data'.","ArrayExpression",["55"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [getData.data]",{"range":"58","text":"59"},[956,958],"[getData.data]"]